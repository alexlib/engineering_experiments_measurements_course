Traceback (most recent call last):
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/user/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# We sample a signal at fs = 200 Hz and record 256 points"

# true values
A = 1.0 # Volt, amplitude
ff = 10.0 # Hz, signal frequency, zero harmonics


# We will work with different sampling frequencies
# and different lengths of records:

fs = 200.0 #Hz
N = 256 # points

plotSignal(A,ff,fs,N)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[3], line 14[0m
[1;32m     11[0m fs [38;5;241m=[39m [38;5;241m200.0[39m [38;5;66;03m#Hz[39;00m
[1;32m     12[0m N [38;5;241m=[39m [38;5;241m256[39m [38;5;66;03m# points[39;00m
[0;32m---> 14[0m [43mplotSignal[49m[43m([49m[43mA[49m[43m,[49m[43mff[49m[43m,[49m[43mfs[49m[43m,[49m[43mN[49m[43m)[49m

File [0;32m~/Documents/repos/engineering_experiments_measurements_course/book/signal_processing/../scripts/signal_processing.py:47[0m, in [0;36mplotSignal[0;34m(A, ff, fs, N)[0m
[1;32m     45[0m t [38;5;241m=[39m np[38;5;241m.[39marange([38;5;241m0.0[39m, T, T[38;5;241m/[39mN)  [38;5;66;03m# sampling time steps[39;00m
[1;32m     46[0m y [38;5;241m=[39m A[38;5;241m*[39mnp[38;5;241m.[39msin([38;5;241m2[39m[38;5;241m*[39mnp[38;5;241m.[39mpi[38;5;241m*[39mff[38;5;241m*[39mt)  [38;5;66;03m# sampled signal[39;00m
[0;32m---> 47[0m frq, Y [38;5;241m=[39m [43mspectrum[49m[43m([49m[43my[49m[43m,[49m[43m [49m[43mfs[49m[43m)[49m  [38;5;66;03m# FFT(sampled signal)[39;00m
[1;32m     49[0m [38;5;66;03m# Plot[39;00m
[1;32m     50[0m fig, ax [38;5;241m=[39m plt[38;5;241m.[39msubplots([38;5;241m2[39m, [38;5;241m1[39m, figsize[38;5;241m=[39m([38;5;241m10[39m, [38;5;241m8[39m))

File [0;32m~/Documents/repos/engineering_experiments_measurements_course/book/signal_processing/../scripts/signal_processing.py:36[0m, in [0;36mspectrum[0;34m(y, Fs)[0m
[1;32m     34[0m T [38;5;241m=[39m n[38;5;241m/[39mFs
[1;32m     35[0m frq [38;5;241m=[39m k[38;5;241m/[39mT  [38;5;66;03m# two sides frequency range[39;00m
[0;32m---> 36[0m frq [38;5;241m=[39m frq[[38;5;28mrange[39m([43mnp[49m[38;5;241;43m.[39;49m[43mint[49m(n[38;5;241m/[39m[38;5;241m2[39m))]  [38;5;66;03m# one side frequency range[39;00m
[1;32m     37[0m Y [38;5;241m=[39m [38;5;241m2[39m[38;5;241m*[39mfft[38;5;241m.[39mfft(y)[38;5;241m/[39mn  [38;5;66;03m# fft computing and normalization[39;00m
[1;32m     38[0m Y [38;5;241m=[39m Y[[38;5;28mrange[39m(np[38;5;241m.[39mint(n[38;5;241m/[39m[38;5;241m2[39m))]

File [0;32m~/Documents/repos/engineering_experiments_measurements_course/.conda/lib/python3.12/site-packages/numpy/__init__.py:397[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    392[0m     warnings[38;5;241m.[39mwarn(
[1;32m    393[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[1;32m    394[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[1;32m    396[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[0;32m--> 397[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr], name[38;5;241m=[39m[38;5;28;01mNone[39;00m)
[1;32m    399[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __expired_attributes__:
[1;32m    400[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[1;32m    401[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m`np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` was removed in the NumPy 2.0 release. [39m[38;5;124m"[39m
[1;32m    402[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m__expired_attributes__[attr][38;5;132;01m}[39;00m[38;5;124m"[39m,
[1;32m    403[0m         name[38;5;241m=[39m[38;5;28;01mNone[39;00m
[1;32m    404[0m     )

[0;31mAttributeError[0m: module 'numpy' has no attribute 'int'.
`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

